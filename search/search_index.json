{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Investigation of the Range as a Function of the Angle of Projection 1. Theoretical Foundation Projectile motion is governed by the basic equations of motion under constant acceleration due to gravity. To derive the equations, we consider two components of motion: horizontal (x-direction) and vertical (y-direction). 1.1 Equations of Motion In projectile motion, the only force acting on the projectile (ignoring air resistance) is gravity, which accelerates the object downward with a constant acceleration, \\( g \\) . The horizontal and vertical motions are independent of each other. We can describe each with kinematic equations: Horizontal motion (no acceleration) : $$ x(t) = v_0 \\cos(\\theta) \\cdot t $$ where: \\( v_0 \\) is the initial velocity, \\( \\theta \\) is the angle of projection, \\( t \\) is time. Vertical motion (constant acceleration due to gravity) : $$ y(t) = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 $$ 1.2 Time of Flight To find the time of flight, we need to determine when the projectile hits the ground, i.e., when \\( y(t) = 0 \\) . Using the vertical motion equation: \\[ y(t) = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 = 0 \\] Factoring out \\( t \\) , we get: \\[ t (v_0 \\sin(\\theta) - \\frac{1}{2} g t) = 0 \\] The solutions are \\( t = 0 \\) (the initial launch) and \\( t = \\frac{2 v_0 \\sin(\\theta)}{g} \\) (the time when the projectile hits the ground). Thus, the time of flight is: \\[ t_f = \\frac{2 v_0 \\sin(\\theta)}{g} \\] 1.3 Horizontal Range The horizontal range \\( R \\) is the distance traveled in the horizontal direction during the time of flight. From the horizontal motion equation: \\[ R = x(t_f) = v_0 \\cos(\\theta) \\cdot t_f \\] Substituting the expression for \\( t_f \\) : \\[ R = v_0 \\cos(\\theta) \\cdot \\frac{2 v_0 \\sin(\\theta)}{g} \\] Simplifying: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] 1.4 Family of Solutions This equation shows how the range \\( R \\) depends on the initial velocity \\( v_0 \\) , the gravitational acceleration \\( g \\) , and the launch angle \\( \\theta \\) . The term \\( \\sin(2\\theta) \\) shows that the range is maximized when \\( \\theta = 45^\\circ \\) because \\( \\sin(90^\\circ) = 1 \\) . Thus, for a given \\( v_0 \\) and \\( g \\) , the range depends on the launch angle. The solution also highlights that the range is symmetric: for any angle \\( \\theta \\) , there is a complementary angle \\( 90^\\circ - \\theta \\) that gives the same range. 2. Analysis of the Range 2.1 Dependence on Launch Angle From the derived equation \\( R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\) , we can see that the horizontal range is a function of \\( \\sin(2\\theta) \\) . Therefore, the range is: Maximized at \\( \\theta = 45^\\circ \\) , where \\( \\sin(90^\\circ) = 1 \\) . Zero at \\( \\theta = 0^\\circ \\) and \\( \\theta = 90^\\circ \\) , since \\( \\sin(0^\\circ) = 0 \\) and \\( \\sin(180^\\circ) = 0 \\) . Symmetrical around \\( \\theta = 45^\\circ \\) . 2.2 Dependence on Initial Velocity and Gravitational Acceleration From the equation for the range, we observe that the range \\( R \\) is directly proportional to the square of the initial velocity \\( v_0 \\) and inversely proportional to the gravitational acceleration \\( g \\) . Therefore: Initial velocity : As \\( v_0 \\) increases, the range increases quadratically. This implies that doubling the initial velocity quadruples the range. Gravitational acceleration : The range decreases with an increase in gravitational acceleration, so on a planet with stronger gravity, the range of a projectile would be shorter. 3. Practical Applications This model is a simplified version of projectile motion, which assumes no air resistance and level ground. In real-world applications, several factors influence projectile motion: Air resistance : Drag forces reduce the horizontal range and make the trajectory curve differently. The more streamlined the projectile, the less drag it experiences. Uneven terrain : The model assumes level ground, but if the projectile is launched at an incline or on a hill, the calculations become more complex. Wind : Wind can modify both the trajectory and range by altering the horizontal velocity of the projectile. 4. Implementation Below is a Python script to simulate projectile motion and visualize the range as a function of the launch angle for different initial velocities. import numpy as np import matplotlib.pyplot as plt # Constants g = 9.81 # Acceleration due to gravity (m/s^2) # Function to calculate the range based on angle and initial velocity def calculate_range(v0, angle): # Convert angle to radians theta = np.radians(angle) # Range formula R = (v0\\*_2 _ np.sin(2\\*theta)) / g return R # Generate data for multiple initial velocities initial_velocities = [20, 30, 40, 50] # Different initial velocities in m/s angles = np.linspace(0, 90, 100) # Angles from 0 to 90 degrees # Plotting plt.figure(figsize=(10,6)) for v0 in initial_velocities: ranges = [calculate_range(v0, angle) for angle in angles] plt.plot(angles, ranges, label=f'v0 = {v0} m/s') plt.title('Projectile Range vs Launch Angle') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (meters)') plt.legend() plt.grid(True) plt.show()","title":"Investigation of the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigation-of-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigation of the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"Projectile motion is governed by the basic equations of motion under constant acceleration due to gravity. To derive the equations, we consider two components of motion: horizontal (x-direction) and vertical (y-direction).","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#11-equations-of-motion","text":"In projectile motion, the only force acting on the projectile (ignoring air resistance) is gravity, which accelerates the object downward with a constant acceleration, \\( g \\) . The horizontal and vertical motions are independent of each other. We can describe each with kinematic equations: Horizontal motion (no acceleration) : $$ x(t) = v_0 \\cos(\\theta) \\cdot t $$ where: \\( v_0 \\) is the initial velocity, \\( \\theta \\) is the angle of projection, \\( t \\) is time. Vertical motion (constant acceleration due to gravity) : $$ y(t) = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 $$","title":"1.1 Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#12-time-of-flight","text":"To find the time of flight, we need to determine when the projectile hits the ground, i.e., when \\( y(t) = 0 \\) . Using the vertical motion equation: \\[ y(t) = v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 = 0 \\] Factoring out \\( t \\) , we get: \\[ t (v_0 \\sin(\\theta) - \\frac{1}{2} g t) = 0 \\] The solutions are \\( t = 0 \\) (the initial launch) and \\( t = \\frac{2 v_0 \\sin(\\theta)}{g} \\) (the time when the projectile hits the ground). Thus, the time of flight is: \\[ t_f = \\frac{2 v_0 \\sin(\\theta)}{g} \\]","title":"1.2 Time of Flight"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#13-horizontal-range","text":"The horizontal range \\( R \\) is the distance traveled in the horizontal direction during the time of flight. From the horizontal motion equation: \\[ R = x(t_f) = v_0 \\cos(\\theta) \\cdot t_f \\] Substituting the expression for \\( t_f \\) : \\[ R = v_0 \\cos(\\theta) \\cdot \\frac{2 v_0 \\sin(\\theta)}{g} \\] Simplifying: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\]","title":"1.3 Horizontal Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#14-family-of-solutions","text":"This equation shows how the range \\( R \\) depends on the initial velocity \\( v_0 \\) , the gravitational acceleration \\( g \\) , and the launch angle \\( \\theta \\) . The term \\( \\sin(2\\theta) \\) shows that the range is maximized when \\( \\theta = 45^\\circ \\) because \\( \\sin(90^\\circ) = 1 \\) . Thus, for a given \\( v_0 \\) and \\( g \\) , the range depends on the launch angle. The solution also highlights that the range is symmetric: for any angle \\( \\theta \\) , there is a complementary angle \\( 90^\\circ - \\theta \\) that gives the same range.","title":"1.4 Family of Solutions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#21-dependence-on-launch-angle","text":"From the derived equation \\( R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\) , we can see that the horizontal range is a function of \\( \\sin(2\\theta) \\) . Therefore, the range is: Maximized at \\( \\theta = 45^\\circ \\) , where \\( \\sin(90^\\circ) = 1 \\) . Zero at \\( \\theta = 0^\\circ \\) and \\( \\theta = 90^\\circ \\) , since \\( \\sin(0^\\circ) = 0 \\) and \\( \\sin(180^\\circ) = 0 \\) . Symmetrical around \\( \\theta = 45^\\circ \\) .","title":"2.1 Dependence on Launch Angle"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#22-dependence-on-initial-velocity-and-gravitational-acceleration","text":"From the equation for the range, we observe that the range \\( R \\) is directly proportional to the square of the initial velocity \\( v_0 \\) and inversely proportional to the gravitational acceleration \\( g \\) . Therefore: Initial velocity : As \\( v_0 \\) increases, the range increases quadratically. This implies that doubling the initial velocity quadruples the range. Gravitational acceleration : The range decreases with an increase in gravitational acceleration, so on a planet with stronger gravity, the range of a projectile would be shorter.","title":"2.2 Dependence on Initial Velocity and Gravitational Acceleration"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"This model is a simplified version of projectile motion, which assumes no air resistance and level ground. In real-world applications, several factors influence projectile motion: Air resistance : Drag forces reduce the horizontal range and make the trajectory curve differently. The more streamlined the projectile, the less drag it experiences. Uneven terrain : The model assumes level ground, but if the projectile is launched at an incline or on a hill, the calculations become more complex. Wind : Wind can modify both the trajectory and range by altering the horizontal velocity of the projectile.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation","text":"Below is a Python script to simulate projectile motion and visualize the range as a function of the launch angle for different initial velocities. import numpy as np import matplotlib.pyplot as plt # Constants g = 9.81 # Acceleration due to gravity (m/s^2) # Function to calculate the range based on angle and initial velocity def calculate_range(v0, angle): # Convert angle to radians theta = np.radians(angle) # Range formula R = (v0\\*_2 _ np.sin(2\\*theta)) / g return R # Generate data for multiple initial velocities initial_velocities = [20, 30, 40, 50] # Different initial velocities in m/s angles = np.linspace(0, 90, 100) # Angles from 0 to 90 degrees # Plotting plt.figure(figsize=(10,6)) for v0 in initial_velocities: ranges = [calculate_range(v0, angle) for angle in angles] plt.plot(angles, ranges, label=f'v0 = {v0} m/s') plt.title('Projectile Range vs Launch Angle') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (meters)') plt.legend() plt.grid(True) plt.show()","title":"4. Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"PROBLEM 2 1. Theoretical Foundation The Forced Damped Pendulum Model The motion of a forced damped pendulum can be described by the following second-order ordinary differential equation (ODE): \\[ \\theta''(t) + 2 \\gamma \\theta'(t) + \\omega_0^2 \\theta(t) = F_0 \\cos(\\omega t) \\] Where: \\( \\theta(t) \\) is the angular displacement of the pendulum as a function of time, \\( \\gamma \\) is the damping coefficient (representing the frictional or resistive forces), \\( \\omega_0 \\) is the natural frequency of the pendulum (which depends on the length and acceleration due to gravity), \\( F_0 \\) is the amplitude of the external driving force, \\( \\omega \\) is the driving angular frequency, and \\( t \\) is time. This equation describes the motion of the pendulum under the influence of both damping and an external periodic force. The term \\( 2 \\gamma \\theta'(t) \\) represents the damping force, \\( \\omega_0^2 \\theta(t) \\) represents the restoring force due to gravity, and \\( F_0 \\cos(\\omega t) \\) is the periodic driving force. Small-Angle Approximation For small oscillations, we can assume that the angle \\( \\theta(t) \\) is small enough that \\( \\sin(\\theta(t)) \\approx \\theta(t) \\) , simplifying the equation of motion to: \\[ \\theta''(t) + 2 \\gamma \\theta'(t) + \\omega_0^2 \\theta(t) = F_0 \\cos(\\omega t) \\] This is a standard forced damped harmonic oscillator equation, which is more analytically tractable. The solution to this equation depends on several factors, including the damping coefficient, driving frequency, and driving amplitude. Approximate Solution for the Forced Damped Pendulum The general solution to the equation consists of two parts: Homogeneous Solution (related to the system's natural dynamics without the external force): $$ \\theta_h(t) = A e^{-\\gamma t} \\cos(\\omega_0 t + \\phi) $$ Where \\( A \\) and \\( \\phi \\) are constants determined by initial conditions, and the exponential decay factor \\( e^{-\\gamma t} \\) represents the damping of the system over time. Particular Solution (due to the external driving force): For a steady-state solution, we assume the system reaches a constant amplitude oscillation due to the external force. This solution can be written as: $$ \\theta_p(t) = B \\cos(\\omega t - \\delta) $$ Where \\( B \\) is the amplitude of oscillation and \\( \\delta \\) is the phase shift between the external force and the oscillation. Substituting this into the differential equation and solving for \\( B \\) and \\( \\delta \\) gives us the particular solution: $$ B = \\frac{F_0}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2 \\gamma \\omega)^2}} $$ $$ \\delta = \\tan^{-1}\\left(\\frac{2 \\gamma \\omega}{\\omega_0^2 - \\omega^2}\\right) $$ Thus, the complete solution to the equation is: \\[ \\theta(t) = A e^{-\\gamma t} \\cos(\\omega_0 t + \\phi) + \\frac{F_0}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2 \\gamma \\omega)^2}} \\cos(\\omega t - \\delta) \\] Resonance Conditions and Energy Implications Resonance occurs when the driving frequency \\( \\omega \\) matches the natural frequency \\( \\omega_0 \\) of the pendulum. At resonance, the amplitude of oscillation \\( B \\) becomes large because the denominator in the expression for \\( B \\) becomes very small. In practice, resonance results in the system absorbing maximum energy from the external driving force. The energy absorbed by the system at resonance can be significant, and the oscillation amplitude grows, potentially leading to large motions. This behavior is especially important in engineering, where resonance must be avoided in structures like bridges and buildings to prevent catastrophic failure. 2. Analysis of Dynamics Influence of Damping Coefficient, Driving Amplitude, and Frequency Damping Coefficient ( \\( \\gamma \\) ): As \\( \\gamma \\) increases, the system's oscillations decay more rapidly, reducing the amplitude of oscillation. High damping can suppress resonance effects, limiting the system's ability to oscillate at high amplitudes. Driving Amplitude ( \\( F_0 \\) ): Increasing \\( F_0 \\) increases the amplitude of the system\u2019s steady-state oscillations. However, at very high \\( F_0 \\) , the system may exhibit nonlinear behavior, and the simple harmonic approximation may no longer be valid. Driving Frequency ( \\( \\omega \\) ): The driving frequency affects the resonance condition. If \\( \\omega \\) is close to \\( \\omega_0 \\) , resonance occurs, and the amplitude of oscillations becomes large. Away from resonance, the amplitude decreases. Transition from Regular to Chaotic Motion As the driving amplitude or frequency is varied, the system can transition from regular periodic oscillations to chaotic motion. This can be characterized by sensitivity to initial conditions, where small changes in initial displacement or velocity lead to dramatically different behavior over time. The transition to chaos can be studied using bifurcation diagrams and Poincar\u00e9 sections . 3. Practical Applications Energy Harvesting Devices: The forced damped pendulum can be used in energy harvesting systems where periodic forces are used to extract energy. By tuning the system to resonate with the driving frequency, maximum energy transfer can occur. Suspension Bridges: In suspension bridges, oscillations can be driven by wind or traffic. The design must consider the possibility of resonance, which could lead to destructive oscillations. Oscillating Circuits: Driven RLC circuits, analogous to the forced damped pendulum, demonstrate similar behaviors. Engineers design circuits to avoid resonance to prevent excessive power consumption or damage. 4. Implementation In order to explore these behaviors computationally, a numerical simulation is required. A Python script or Jupyter notebook can be used to simulate the motion of the forced damped pendulum using methods like Runge-Kutta integration for solving the differential equation numerically. Numerical Methods The second-order differential equation can be transformed into a system of first-order differential equations: \\[ \\theta'(t) = v(t) \\] \\[ v'(t) = -2 \\gamma v(t) - \\omega_0^2 \\theta(t) + F_0 \\cos(\\omega t) \\] Using a method like the Runge-Kutta 4th order method , we can integrate these equations over time and observe the system's behavior under different conditions. Phase Diagrams and Poincar\u00e9 Sections Phase Diagram: Plot \\( \\theta(t) \\) vs. \\( v(t) \\) (angular velocity), which shows the system\u2019s trajectory in phase space. Poincar\u00e9 Section: A plot of the system's state at periodic intervals (e.g., every time the pendulum passes through the equilibrium position) to visualize the onset of chaotic behavior. Deliverables Markdown Document: A detailed explanation of the theory and solution for the forced damped pendulum. Discussion on resonance, chaotic behavior, and energy transfer. Python Code/Notebook: Python code to simulate the forced damped pendulum dynamics. Graphical representations of motion, including resonance and chaotic behavior. Visualizations: Phase diagrams and Poincar\u00e9 sections for different parameter settings (damping coefficient, driving amplitude, frequency). Discussion: Analysis of the limitations of the model, such as nonlinear damping, and suggestions for potential extensions (e.g., non-periodic forcing, multi-degree-of-freedom systems). import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Constants gamma = 0.1 # Damping coefficient omega_0 = 2.0 # Natural frequency of the pendulum F_0 = 1.0 # Driving force amplitude omega = 1.8 # Driving frequency t_span = (0, 50) # Time span for simulation (start, end) initial_conditions = [0.1, 0] # Initial conditions: [theta(0), omega(0)] # Define the system of differential equations def forced_damped_pendulum(t, y): theta, omega = y dtheta_dt = omega domega_dt = -2 * gamma * omega - omega_0**2 * theta + F_0 * np.cos(omega * t) return [dtheta_dt, domega_dt] # Solve the differential equation using the Runge-Kutta method sol = solve_ivp(forced_damped_pendulum, t_span, initial_conditions, t_eval=np.linspace(t_span[0], t_span[1], 10000)) # Extract the solution time = sol.t theta = sol.y[0] omega = sol.y[1] # Plot the results # Plot Angular Displacement vs Time plt.figure(figsize=(12, 6)) plt.subplot(2, 2, 1) plt.plot(time, theta, label=\"Angular Displacement (theta)\") plt.title(\"Angular Displacement vs Time\") plt.xlabel(\"Time [s]\") plt.ylabel(\"Theta [rad]\") plt.grid(True) # Plot Angular Velocity vs Time plt.subplot(2, 2, 2) plt.plot(time, omega, label=\"Angular Velocity (omega)\", color='orange') plt.title(\"Angular Velocity vs Time\") plt.xlabel(\"Time [s]\") plt.ylabel(\"Omega [rad/s]\") plt.grid(True) # Phase Plot (theta vs omega) plt.subplot(2, 2, 3) plt.plot(theta, omega, label=\"Phase Plot\") plt.title(\"Phase Plot (Theta vs Omega)\") plt.xlabel(\"Theta [rad]\") plt.ylabel(\"Omega [rad/s]\") plt.grid(True) # Poincar\u00e9 Section (plot at theta = 0) poincare_section = theta[theta[:-1] * theta[1:] < 0] poincare_omega = omega[:-1][theta[:-1] * theta[1:] < 0] plt.subplot(2, 2, 4) plt.plot(poincare_section, poincare_omega, 'o', label=\"Poincar\u00e9 Section\") plt.title(\"Poincar\u00e9 Section\") plt.xlabel(\"Theta [rad]\") plt.ylabel(\"Omega [rad/s]\") plt.grid(True) # Show the plots plt.tight_layout() plt.show()","title":"PROBLEM 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"PROBLEM 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#the-forced-damped-pendulum-model","text":"The motion of a forced damped pendulum can be described by the following second-order ordinary differential equation (ODE): \\[ \\theta''(t) + 2 \\gamma \\theta'(t) + \\omega_0^2 \\theta(t) = F_0 \\cos(\\omega t) \\] Where: \\( \\theta(t) \\) is the angular displacement of the pendulum as a function of time, \\( \\gamma \\) is the damping coefficient (representing the frictional or resistive forces), \\( \\omega_0 \\) is the natural frequency of the pendulum (which depends on the length and acceleration due to gravity), \\( F_0 \\) is the amplitude of the external driving force, \\( \\omega \\) is the driving angular frequency, and \\( t \\) is time. This equation describes the motion of the pendulum under the influence of both damping and an external periodic force. The term \\( 2 \\gamma \\theta'(t) \\) represents the damping force, \\( \\omega_0^2 \\theta(t) \\) represents the restoring force due to gravity, and \\( F_0 \\cos(\\omega t) \\) is the periodic driving force.","title":"The Forced Damped Pendulum Model"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#small-angle-approximation","text":"For small oscillations, we can assume that the angle \\( \\theta(t) \\) is small enough that \\( \\sin(\\theta(t)) \\approx \\theta(t) \\) , simplifying the equation of motion to: \\[ \\theta''(t) + 2 \\gamma \\theta'(t) + \\omega_0^2 \\theta(t) = F_0 \\cos(\\omega t) \\] This is a standard forced damped harmonic oscillator equation, which is more analytically tractable. The solution to this equation depends on several factors, including the damping coefficient, driving frequency, and driving amplitude.","title":"Small-Angle Approximation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#approximate-solution-for-the-forced-damped-pendulum","text":"The general solution to the equation consists of two parts: Homogeneous Solution (related to the system's natural dynamics without the external force): $$ \\theta_h(t) = A e^{-\\gamma t} \\cos(\\omega_0 t + \\phi) $$ Where \\( A \\) and \\( \\phi \\) are constants determined by initial conditions, and the exponential decay factor \\( e^{-\\gamma t} \\) represents the damping of the system over time. Particular Solution (due to the external driving force): For a steady-state solution, we assume the system reaches a constant amplitude oscillation due to the external force. This solution can be written as: $$ \\theta_p(t) = B \\cos(\\omega t - \\delta) $$ Where \\( B \\) is the amplitude of oscillation and \\( \\delta \\) is the phase shift between the external force and the oscillation. Substituting this into the differential equation and solving for \\( B \\) and \\( \\delta \\) gives us the particular solution: $$ B = \\frac{F_0}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2 \\gamma \\omega)^2}} $$ $$ \\delta = \\tan^{-1}\\left(\\frac{2 \\gamma \\omega}{\\omega_0^2 - \\omega^2}\\right) $$ Thus, the complete solution to the equation is: \\[ \\theta(t) = A e^{-\\gamma t} \\cos(\\omega_0 t + \\phi) + \\frac{F_0}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (2 \\gamma \\omega)^2}} \\cos(\\omega t - \\delta) \\]","title":"Approximate Solution for the Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance-conditions-and-energy-implications","text":"Resonance occurs when the driving frequency \\( \\omega \\) matches the natural frequency \\( \\omega_0 \\) of the pendulum. At resonance, the amplitude of oscillation \\( B \\) becomes large because the denominator in the expression for \\( B \\) becomes very small. In practice, resonance results in the system absorbing maximum energy from the external driving force. The energy absorbed by the system at resonance can be significant, and the oscillation amplitude grows, potentially leading to large motions. This behavior is especially important in engineering, where resonance must be avoided in structures like bridges and buildings to prevent catastrophic failure.","title":"Resonance Conditions and Energy Implications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"","title":"2. Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#influence-of-damping-coefficient-driving-amplitude-and-frequency","text":"Damping Coefficient ( \\( \\gamma \\) ): As \\( \\gamma \\) increases, the system's oscillations decay more rapidly, reducing the amplitude of oscillation. High damping can suppress resonance effects, limiting the system's ability to oscillate at high amplitudes. Driving Amplitude ( \\( F_0 \\) ): Increasing \\( F_0 \\) increases the amplitude of the system\u2019s steady-state oscillations. However, at very high \\( F_0 \\) , the system may exhibit nonlinear behavior, and the simple harmonic approximation may no longer be valid. Driving Frequency ( \\( \\omega \\) ): The driving frequency affects the resonance condition. If \\( \\omega \\) is close to \\( \\omega_0 \\) , resonance occurs, and the amplitude of oscillations becomes large. Away from resonance, the amplitude decreases.","title":"Influence of Damping Coefficient, Driving Amplitude, and Frequency"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#transition-from-regular-to-chaotic-motion","text":"As the driving amplitude or frequency is varied, the system can transition from regular periodic oscillations to chaotic motion. This can be characterized by sensitivity to initial conditions, where small changes in initial displacement or velocity lead to dramatically different behavior over time. The transition to chaos can be studied using bifurcation diagrams and Poincar\u00e9 sections .","title":"Transition from Regular to Chaotic Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-practical-applications","text":"Energy Harvesting Devices: The forced damped pendulum can be used in energy harvesting systems where periodic forces are used to extract energy. By tuning the system to resonate with the driving frequency, maximum energy transfer can occur. Suspension Bridges: In suspension bridges, oscillations can be driven by wind or traffic. The design must consider the possibility of resonance, which could lead to destructive oscillations. Oscillating Circuits: Driven RLC circuits, analogous to the forced damped pendulum, demonstrate similar behaviors. Engineers design circuits to avoid resonance to prevent excessive power consumption or damage.","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-implementation","text":"In order to explore these behaviors computationally, a numerical simulation is required. A Python script or Jupyter notebook can be used to simulate the motion of the forced damped pendulum using methods like Runge-Kutta integration for solving the differential equation numerically.","title":"4. Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#numerical-methods","text":"The second-order differential equation can be transformed into a system of first-order differential equations: \\[ \\theta'(t) = v(t) \\] \\[ v'(t) = -2 \\gamma v(t) - \\omega_0^2 \\theta(t) + F_0 \\cos(\\omega t) \\] Using a method like the Runge-Kutta 4th order method , we can integrate these equations over time and observe the system's behavior under different conditions.","title":"Numerical Methods"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#phase-diagrams-and-poincare-sections","text":"Phase Diagram: Plot \\( \\theta(t) \\) vs. \\( v(t) \\) (angular velocity), which shows the system\u2019s trajectory in phase space. Poincar\u00e9 Section: A plot of the system's state at periodic intervals (e.g., every time the pendulum passes through the equilibrium position) to visualize the onset of chaotic behavior.","title":"Phase Diagrams and Poincar\u00e9 Sections"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#deliverables","text":"Markdown Document: A detailed explanation of the theory and solution for the forced damped pendulum. Discussion on resonance, chaotic behavior, and energy transfer. Python Code/Notebook: Python code to simulate the forced damped pendulum dynamics. Graphical representations of motion, including resonance and chaotic behavior. Visualizations: Phase diagrams and Poincar\u00e9 sections for different parameter settings (damping coefficient, driving amplitude, frequency). Discussion: Analysis of the limitations of the model, such as nonlinear damping, and suggestions for potential extensions (e.g., non-periodic forcing, multi-degree-of-freedom systems). import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Constants gamma = 0.1 # Damping coefficient omega_0 = 2.0 # Natural frequency of the pendulum F_0 = 1.0 # Driving force amplitude omega = 1.8 # Driving frequency t_span = (0, 50) # Time span for simulation (start, end) initial_conditions = [0.1, 0] # Initial conditions: [theta(0), omega(0)] # Define the system of differential equations def forced_damped_pendulum(t, y): theta, omega = y dtheta_dt = omega domega_dt = -2 * gamma * omega - omega_0**2 * theta + F_0 * np.cos(omega * t) return [dtheta_dt, domega_dt] # Solve the differential equation using the Runge-Kutta method sol = solve_ivp(forced_damped_pendulum, t_span, initial_conditions, t_eval=np.linspace(t_span[0], t_span[1], 10000)) # Extract the solution time = sol.t theta = sol.y[0] omega = sol.y[1] # Plot the results # Plot Angular Displacement vs Time plt.figure(figsize=(12, 6)) plt.subplot(2, 2, 1) plt.plot(time, theta, label=\"Angular Displacement (theta)\") plt.title(\"Angular Displacement vs Time\") plt.xlabel(\"Time [s]\") plt.ylabel(\"Theta [rad]\") plt.grid(True) # Plot Angular Velocity vs Time plt.subplot(2, 2, 2) plt.plot(time, omega, label=\"Angular Velocity (omega)\", color='orange') plt.title(\"Angular Velocity vs Time\") plt.xlabel(\"Time [s]\") plt.ylabel(\"Omega [rad/s]\") plt.grid(True) # Phase Plot (theta vs omega) plt.subplot(2, 2, 3) plt.plot(theta, omega, label=\"Phase Plot\") plt.title(\"Phase Plot (Theta vs Omega)\") plt.xlabel(\"Theta [rad]\") plt.ylabel(\"Omega [rad/s]\") plt.grid(True) # Poincar\u00e9 Section (plot at theta = 0) poincare_section = theta[theta[:-1] * theta[1:] < 0] poincare_omega = omega[:-1][theta[:-1] * theta[1:] < 0] plt.subplot(2, 2, 4) plt.plot(poincare_section, poincare_omega, 'o', label=\"Poincar\u00e9 Section\") plt.title(\"Poincar\u00e9 Section\") plt.xlabel(\"Theta [rad]\") plt.ylabel(\"Omega [rad/s]\") plt.grid(True) # Show the plots plt.tight_layout() plt.show()","title":"Deliverables"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}